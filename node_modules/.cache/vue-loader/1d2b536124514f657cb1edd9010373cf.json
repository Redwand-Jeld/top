{"remainingRequest":"C:\\Users\\user\\Desktop\\atomic task\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\user\\Desktop\\atomic task\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\user\\Desktop\\atomic task\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\atomic task\\src\\views\\Philosofhy.vue?vue&type=template&id=4e516021&","dependencies":[{"path":"C:\\Users\\user\\Desktop\\atomic task\\src\\views\\Philosofhy.vue","mtime":1629482453942},{"path":"C:\\Users\\user\\Desktop\\atomic task\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\atomic task\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\atomic task\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\atomic task\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF92bS5fbSgwKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInBhLTUgIiB9LCBbCiAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgX2MoImgyIiwgeyBzdGF0aWNDbGFzczogImRpc3BsYXktMiIgfSwgWwogICAgICAgICAgX3ZtLl92KCJVbmEgZmlsb3NvZmlhIGFudGljbGltYSIpCiAgICAgICAgXSksCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29sLTEyICIsCiAgICAgICAgICBhdHRyczogeyBzcmM6ICJodHRwczovL2Nkbi5xdWFzYXIuZGV2L2ltZy9wYXJhbGxheDIuanBnIiB9CiAgICAgICAgfSkKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJDb21vIGRpY2UgZWwgcHJvcGlvIG5vbWJyZSBlcyB1bmEgZmlsb3NvZmlhIHF1ZSB0aWVuZSBlbCBmaW4gZGUgZnVuY2lvbmFyIGVuIGN1YWxxdWllciBjaXJjdW5zdGFuY2lhIGFkdmVyc2EgZW4gbGEgdmlkYSAsIGNvbW8gZGUgZGFyIHVuIHBpbGFyIGVsIHF1ZSBhcG95YXJ0ZSBjdWFuZG8gdmVuZ2FuIG1hbCBkYWRhcyIKICAgICAgICAgICkKICAgICAgICBdKSwKICAgICAgICBfYygicCIsIFtfdm0uX3YoIkxhIGZpbG9zb2ZpYSBBbnRpY2xpbWF0ZSBzZSBjb21wb25lIDUgcGlsYXJlcyIpXSksCiAgICAgICAgX2MoImJyIikKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgX2MoImgzIiwgW192bS5fdigiTGEgbGV5IGF0b21pY2EgIildKSwKICAgICAgICBfYygicCIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgJ0VzdGUgcGlsYXIgc2UgYmFzYSBtYXlvcm1lbnRlIGRlIGVsIGxpYnJvIEF0b21pYyBoYWJpdHMgZW4gZXN0ZSBzZSBzYWNhIGVudHJlIG90cm9zIGxvcyBwdW50b3MgY2xhdmUgcXVlIHNvbjogcG9uZXIgdW5hIGZlY2hhIGxpbWl0ZSBhIGxvcyBwcm95ZWN0b3MgbyBzaW5vIHRlIHZlcmFzIGluZnVlbmNpYWRvIHBvciBsYSBsZXkgcGFya2luc29uIHF1ZSBzZSBkZWZpbmUgY29tbyAiIGVsIHRyYWJham8gc2UgZXhwYW5kZSBoYXN0YSBsbGVuYXIgZWwgdGllbXBvIGRpc3BvbmlibGUiLCBlc3RvIHNlIHZlIGVuIGxvcyBmdW5jaW9uYXJpb3MgZXNjYW5kYWxvc2FtZW50ZSBiaWVuLiBMYSBvdHJhIGVzIGNyZWFyIHJlY29tcGVuc2FzIHkgY2FzdGlnb3MgcGFyYSBpbmNlbnRpdmFyIHVuIGhhYml0by4gWSBlbCBjb25jZXB0byBkZWwgZGVwb3NpdG8gcXVlIHNlIHBpZXJkZSBhbCBpbmN1bXBsaXIgdW5hIHRhcmVhIHkgbGEgcmVzcG9uc2FiaWxpZGFkIGNvbXBhcnRpZGEgY29uIGxhIHBlcnNvbmEgcXVlIGNoZXF1ZWEgdHUgYWN0aXZpZGFkICcKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX2MoImRpdiIsIFsKICAgICAgICBfYygiaDMiLCBbX3ZtLl92KCJDcmVhciBkb2dtYXMiKV0pLAogICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAnUHVlZGUgc29uYXIgbWFsIGxhIHBhbGFicmEgZG9nbWEgcGVybyBzb2xvIGVzIHVuIHNpc3RlbWEgZGUgcGVuc2FtaWVudG8gcXVlIG5vIHB1ZWRlIHBvbmVyc2UgZW4gZHVkYSAsYmllbiB1dGlsaXphZG8gcHVlZGUgc2VyIGxhIHVsdGltYSBoZXJyYW1pZW50YSBlbiBmb3JtYSBkZSB1bmEgZnVlcnRlIHZ1bHVudGFkLCBxdWUgdGUgYXl1ZGFyYSBwcmV2YWxlY2VyIGFudGUgbGEgZGlmaWN1bHRhZC4gVmVhbW9zIGxhIGZvcm1hIG1hcyBzZW5jaWxsYSBkZSBhcGxpY2FybG8gZXMgY29uIGVsIGRlcG9ydGUgZW1waWV6YSBhIGhhY2VyIGVqZXJjaWNpby4gQ3VhbmRvIGVtcGllY2UgYSBjb3N0YXJ0ZSByZXBpdGUgInNveSBpbnZlbmNpYmxlIiBjYWRhIHZleiByZXBpdGVsbyBjdWFuZG8gaGFnYXMgYWxnbyBtYXMgZGlmaWNpbCwgeSB2ZSBlc2NhbGFuZG9sbyBjb25mb3JtZSBhdW1lbnRlIGVsIGdyYWRvIGRlIGRpZmljdWx0YWQgJwogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiQ3VhbmRvIFJvbWEgY2FpZ2EsIGVsIGVtcGVyYWRvciBkZWJlIHNlZ3VpciBkZSBwaWUgcGFyYSBwcmVwYXJhciBlbCBjb250cmF0YXF1ZSAiCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgX2MoImgzIiwgW192bS5fdigiS3VybyIpXSksCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJDb25jZXB0byBrdXJvIGVzIGJhc3RhbnRlIHByYWN0aWNvIGNvamEgZWwgdGVsZWZvbm8geSBlbnRyYSBhbCBDYWxlbmRhcmlvIHZlIGFsIHVsdGltYSBhw7FvIHkgZWxpZ2UgY3VhbHF1aWVyIGRpYS4gIgogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX2MoImIiLCBbCiAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAiTGVjdG9yIHBvciBmYXZvciBkZWplIGRlIGxlZXIgLCBoYWdhbG8geSB2dWVsdmEgYXF1aSBsZSBjYXVzYXJhIG1lbm9zIGltcGFjdG8gZWwgcmVzdWx0YWRvIHNpbm8gbG8gaGFjZSAiCiAgICAgICAgICAgICkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImJyIikKICAgICAgICBdKSwKICAgICAgICBfYygicCIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIiBEZXNwdWVzIGRlIGVsaWdpciBsYSBmZWNoYSBhc3VtYSBxdWUgZXNlIGRpYSB2YSBtb3JpciAsIHRpZW5lIGhhc3RhIGVzYSBmZWNoYSBwYXJhIGNvbnNlZ3VpciB0b2RvIGxvIHF1ZSBxdWllcmEgZW4gZXN0YSB2aWRhIHkgbWVudGFsaWNlc2UgY29uIGVzYSBpZGVhLiAiCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJNdWNoYXMgdmVjZXMgb2x2aWRhbW9zIHF1ZSB0ZW5lbW9zIHVuYSBmZWNoYSBkZSBjYWR1Y2lkYWQgY29tbyBkaWpvIFNpY2lsaW86IE1pZW50cmFzIHZpdmFzLCBicmlsbGEsIG5vIHN1ZnJhcyBwb3IgbmFkYSBlbiBhYnNvbHV0by4gTGEgdmlkYSBkdXJhIHBvY28sIHkgZWwgdGllbXBvIGV4aWdlIHN1IHRyaWJ1dG8gIgogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfYygiZGl2IiwgWwogICAgICAgIF9jKCJoMyIsIFtfdm0uX3YoIiBNZW50ZSBzdWljaWRhICIpXSksCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJObyBoYXkgbWVqb3IgZm9ybWEgcGFyYSBkZWZpbmlyIGNvbmNlcHRvIHF1ZW1hciBsYXMgbmF2ZXMgZGUgSGVybmFuIENvcnRlcyBjdWFuZG8gY29ucXVpc3RvIE3DqXhpY28gaHVibyB1biBtb3RpbiBlc3RlIG1hbmRvIGh1bmRpciBsb3MgYmFyY29zIC4gVG9kbyBwYXJhIHF1ZSBuYWRpZSB0dXZpZXJhIGxhIHRlbnRhY2nDs24gZGUgcmVjdWxhciBwb3IgbGEgZGlmaWN1bHRhZCBkZSBsYSBtaXNpw7NuLiAiCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJVdGlsaXphciBlc3RlIGNvbmNlcHRvIGVuIGxhIHZpZGEgdGUgbWV0ZXJhIGRlbnRybyBkZWwgdHVuZWwgaGFzdGEgcXVlIHRlcm1pbmVzIHR1cyBvYmxpZ2Fjb25lcyIKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX2MoImRpdiIsIFsKICAgICAgICBfYygiaDMiLCBbX3ZtLl92KCJHcmF0aXR1ZCIpXSksCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJIYXkgbXVjaGFzIGNvc2FzIGRlIGxvIHF1ZSBlc3RhciBhZ3JlZGVjaWRvcyBwb3IgbG9zIGFjdG9zIGluZGl2aWR1YWxlcyBxdWUgdGUgaGFuIGFwb3lhZG8gaGFzdGEgYWhvcmEgZW4gbWkgY2FzbyBzb2xvIHRlbmdvIGdyYXRpdHVkIGhhY2lhIGxhcyBwZXJzb25hcyBxdWUgbWUgaGFuIHRyYWlkbyBoYXN0YSBkb25kZSBlc3RveSAiCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}