{"remainingRequest":"C:\\Users\\user\\Desktop\\atomic task\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\user\\Desktop\\atomic task\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\user\\Desktop\\atomic task\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\atomic task\\src\\components\\navbar.vue?vue&type=template&id=688b5e20&","dependencies":[{"path":"C:\\Users\\user\\Desktop\\atomic task\\src\\components\\navbar.vue","mtime":1629468567431},{"path":"C:\\Users\\user\\Desktop\\atomic task\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\atomic task\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\atomic task\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\atomic task\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICBbCiAgICAgIF9jKAogICAgICAgICJ2LWFwcC1iYXIiLAogICAgICAgIHsgYXR0cnM6IHsgY29sb3I6ICJibGFjayIsIGRlbnNlOiAiIiwgZGFyazogIiIgfSB9LAogICAgICAgIFsKICAgICAgICAgIF9jKCJ2LWFwcC1iYXItbmF2LWljb24iLCB7CiAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpCiAgICAgICAgICAgICAgICBfdm0uZHJhd2VyID0gIV92bS5kcmF3ZXIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJ2LWxheW91dCIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgY29sdW1uOiAiIiwgcm93OiAiIiwgInBhLTUiOiAiIiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygidi10b29sYmFyLXRpdGxlIiwgeyBzdGF0aWNDbGFzczogInRleHQtc20taDQiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiQXRvbWljIHRhc2sgIikKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApLAogICAgICAgICAgX2MoInYtc3BhY2VyIiksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImEiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJibGFjay0tdGV4dCIsCiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIGhyZWY6ICJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vcmVkd2FuZC1qZWxkLWE4NzU2NDEzNS8iLAogICAgICAgICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgaWNvbjogIiIsIGNvbG9yOiAiZGVlcC1wdXJwbGUgYWNjZW50LTJcclxuIiB9IH0sCiAgICAgICAgICAgICAgICBbX2MoInYtaWNvbiIsIFtfdm0uX3YoIm1kaS1kaXNjb3JkIildKV0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYmxhY2stLXRleHQiLAogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBocmVmOiAiaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9yZWRvdS5qZWxkLyIsCiAgICAgICAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgICAgICAgICAgcmVsOiAibm9vcGVuZXIgbm9yZWZlcnJlciIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGljb246ICIiLCBjb2xvcjogInBpbmsiIH0gfSwKICAgICAgICAgICAgICAgIFtfYygidi1pY29uIiwgW192bS5fdigibWRpLWluc3RhZ3JhbSIpXSldLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYSIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJsYWNrLS10ZXh0IiwKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgaHJlZjogImh0dHBzOi8vZ2l0aHViLmNvbS9SZWR3YW5kLUplbGQvdnVlLXJlZHdhbmQtY3YiLAogICAgICAgICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgICAgICAgICAgIHJlbDogIm5vb3BlbmVyIG5vcmVmZXJyZXIiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICAgICAgeyBhdHRyczogeyBpY29uOiAiIiwgY29sb3I6ICJ5ZWxsb3ciIH0gfSwKICAgICAgICAgICAgICAgIFtfYygidi1pY29uIiwgW192bS5fdigibWRpLWRvd25sb2FkLWJveCIpXSldLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfYygKICAgICAgICAidi1uYXZpZ2F0aW9uLWRyYXdlciIsCiAgICAgICAgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJibGFjayAiLAogICAgICAgICAgYXR0cnM6IHsgYWJzb2x1dGU6ICIiLCB0ZW1wb3Jhcnk6ICIiLCBkYXJrOiAiIiB9LAogICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgdmFsdWU6IF92bS5kcmF3ZXIsCiAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICBfdm0uZHJhd2VyID0gJCR2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGV4cHJlc3Npb246ICJkcmF3ZXIiCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtbGlzdC1pdGVtIiwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtbGlzdC1pdGVtLWF2YXRhciIsCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJ2LWltZyIsIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgc3JjOiAiaHR0cHM6Ly9yYW5kb211c2VyLm1lL2FwaS9wb3J0cmFpdHMvbWVuLzc4LmpwZyIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAidi1saXN0LWl0ZW0tY29udGVudCIsCiAgICAgICAgICAgICAgICBbX2MoInYtbGlzdC1pdGVtLXRpdGxlIiwgW192bS5fdigiSm9obiBMZWlkZXIiKV0pXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICksCiAgICAgICAgICBfYygidi1kaXZpZGVyIiksCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtbGlzdCIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgZGVuc2U6ICIiIH0gfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtbGlzdC1pdGVtIiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86ICIvIiB9IH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJ2LWxpc3QtaXRlbS1pY29uIiwKICAgICAgICAgICAgICAgICAgICBbX2MoInYtaWNvbiIsIFtfdm0uX3YoIm1kaS1ob21lIildKV0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1saXN0LWl0ZW0tY29udGVudCIsCiAgICAgICAgICAgICAgICAgICAgW19jKCJ2LWxpc3QtaXRlbS10aXRsZSIsIFtfdm0uX3YoIkluaWNpbyIpXSldLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtbGlzdC1pdGVtIiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86ICIvcm91dGUiIH0gfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInYtbGlzdC1pdGVtLWljb24iLAogICAgICAgICAgICAgICAgICAgIFtfYygidi1pY29uIiwgW192bS5fdigibWRpLXZpZXctZGFzaGJvYXJkIildKV0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1saXN0LWl0ZW0tY29udGVudCIsCiAgICAgICAgICAgICAgICAgICAgW19jKCJ2LWxpc3QtaXRlbS10aXRsZSIsIFtfdm0uX3YoIlJ1dGEgYXRvbWljYSIpXSldLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtbGlzdC1pdGVtIiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86ICIvYmxvZyIgfSB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1saXN0LWl0ZW0taWNvbiIsCiAgICAgICAgICAgICAgICAgICAgW19jKCJ2LWljb24iLCBbX3ZtLl92KCJtZGktYm9vay12YXJpYW50IildKV0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1saXN0LWl0ZW0tY29udGVudCIsCiAgICAgICAgICAgICAgICAgICAgW19jKCJ2LWxpc3QtaXRlbS10aXRsZSIsIFtfdm0uX3YoIkNvbnNlam9zIGF0b21pY28iKV0pXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LWxpc3QtaXRlbSIsCiAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHRvOiAiL2Rvd25sb2FkIiB9IH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJ2LWxpc3QtaXRlbS1pY29uIiwKICAgICAgICAgICAgICAgICAgICBbX2MoInYtaWNvbiIsIFtfdm0uX3YoIm1kaS1kb3dubG9hZC1ib3ggIildKV0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1saXN0LWl0ZW0tY29udGVudCIsCiAgICAgICAgICAgICAgICAgICAgW19jKCJ2LWxpc3QtaXRlbS10aXRsZSIsIFtfdm0uX3YoIkRlc2NhcmdhciIpXSldLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtbGlzdC1pdGVtIiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86ICIvbmV3c2xldHRlciIgfSB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1saXN0LWl0ZW0taWNvbiIsCiAgICAgICAgICAgICAgICAgICAgW19jKCJ2LWljb24iLCBbX3ZtLl92KCJtZGktZW1haWwtbmV3c2xldHRlciAiKV0pXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJ2LWxpc3QtaXRlbS1jb250ZW50IiwKICAgICAgICAgICAgICAgICAgICBbX2MoInYtbGlzdC1pdGVtLXRpdGxlIiwgW192bS5fdigiTmV3c2xldHRlciIpXSldLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtbGlzdC1pdGVtIiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86ICIvaGVscCIgfSB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1saXN0LWl0ZW0taWNvbiIsCiAgICAgICAgICAgICAgICAgICAgW19jKCJ2LWljb24iLCBbX3ZtLl92KCJtZGktaGVscC1ib3ggIildKV0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1saXN0LWl0ZW0tY29udGVudCIsCiAgICAgICAgICAgICAgICAgICAgW19jKCJ2LWxpc3QtaXRlbS10aXRsZSIsIFtfdm0uX3YoIkF5dWRhIildKV0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApCiAgICBdLAogICAgMQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}